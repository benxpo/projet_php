<?php

namespace ComicReader\AdminBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * BookRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BookRepository extends EntityRepository
{
    public function findAllValidated()
    {
        $qb = $this->_em->createQueryBuilder();
    
        $qb->select('b')
            ->from('ComicReaderAdminBundle:Book', 'b')
            ->where('b.Validated >= :validate')
            ->setParameter('validate', 1);
    
        return $qb->getQuery()->getResult();
    }
    
    
    public function findAllNotValidated()
    {
        $qb = $this->_em->createQueryBuilder();
    
        $qb->select('b')
            ->from('ComicReaderAdminBundle:Book', 'b')
            ->where('b.Validated = :validate')
            ->setParameter('validate', 0);
    
        return $qb->getQuery()->getResult();
    }
    
    
    public function searchTitle($value)
    {
        $qb = $this->_em->createQueryBuilder();
    
        $qb->select('b')
            ->from('ComicReaderAdminBundle:Book', 'b')
            ->where('b.Validated >= :validate')
            ->andWhere('b.Title LIKE :value')
            ->setParameter('validate', 1)
            ->setParameter('value', '%'.$value.'%');
    
        return $qb->getQuery()->getResult();
    }
    
    public function searchDescription($value)
    {
        $qb = $this->_em->createQueryBuilder();
    
        $qb->select('b')
            ->from('ComicReaderAdminBundle:Book', 'b')
            ->where('b.Validated >= :validate')
            ->andWhere('b.Description LIKE :value')
            ->setParameter('validate', 1)
            ->setParameter('value', '%'.$value.'%');
    
        return $qb->getQuery()->getResult();
    }
    
    public function searchAuthor($authorid)
    {
        $qb = $this->_em->createQueryBuilder();
    
        $qb->select('b')
            ->from('ComicReaderAdminBundle:Book', 'b')
            ->where('b.Validated >= :validate')
            ->andWhere('b.FK_Author = :value')
            ->setParameter('validate', 1)
            ->setParameter('value', $authorid);
    
        return $qb->getQuery()->getResult();
    }
    
    public function getLast()
    {
        $qb = $this->_em->createQueryBuilder();
    
        $qb->select('b')
            ->from('ComicReaderAdminBundle:Book', 'b')
            ->where('b.Validated >= :validate')
            ->setParameter('validate', 1)
            ->orderBy('u.username ASC')
            ->limit(5);
    
        return $qb->getQuery()->getResult();
    }
}